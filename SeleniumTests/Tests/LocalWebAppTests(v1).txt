using System;
using System.Data.Common;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using SeleniumExtras.WaitHelpers;

namespace SeleniumTests
{
    [TestClass]
    public class LocalWebAppTests
    {
        private IWebDriver driver;

        [TestInitialize]
        public void Setup()
        {
            var options = new ChromeOptions();
            // options.AddArgument("--headless=new");
            options.AddArguments(["--start-maximized", "--ignore-certificate-errors"]);
            driver = new ChromeDriver(options);
        }

        IWebElement selectElement(string elementId)
        {
            return driver.FindElement(By.Name(elementId));
        }

        void goToURL(string UrlString)
        {
            driver.Navigate().GoToUrl(UrlString);
        }

        [TestMethod]
        public void LoginTest()
        {
            // Navigation to local VM address
            goToURL("http://192.168.20.71:1021/BuildingPermit/Application#");

            //Initialize variables Selecting elements 
            var prefix = selectElement("Prefix");
            var pincode = selectElement("pincode");
            var year = selectElement("year");
            var SeriesNo = selectElement("SeriesNo");
            var user = selectElement("Username");
            var password = selectElement("Password");

            //Sending Keys
            prefix.SendKeys("BLG");
            pincode.SendKeys("1234");
            year.SendKeys("25");
            SeriesNo.SendKeys("0000003");
            user.SendKeys("JDELAC");
            password.SendKeys("P@ssw0rd");

            //Submitting Form
            user.SendKeys(Keys.Return);

            IWebElement twoFactor = driver.FindElement(By.Id("frmVerification"));

            WebDriverWait wait = new WebDriverWait(driver, TimeSpan.FromSeconds(20));
            wait.Until(d => twoFactor.Displayed);

            var otpCode = driver.FindElement(By.Id("hidVerCode")).GetAttribute("value");
            var otpBox = selectElement("VerificationCode");

            otpBox.SendKeys(otpCode);

            IWebElement submitButton = wait.Until(
                ExpectedConditions.ElementToBeClickable(
                    By.CssSelector("button.form-control.btn.btn-success")
                )
            );

            // Click the submit button
            submitButton.Click();
            //End of Login test

            //Start of Testing Building Permit Application module 
            var buildingModal = wait.Until(d => d.FindElement(By.Id("modalOwnBuilding")));

            driver.FindElement(By.XPath("//table[@id='tblOwnBuilding']//td[normalize-space(text())='JLO']")).Click();
            driver.FindElement(By.XPath("//button[@id='btnSelectExisting']")).Click();
            

            
            // selectElement("btnNewBuilding").SendKeys(Keys.Return);


        }

     
        // [TestCleanup]
        // public void Teardown()
        // {
        //     driver?.Quit();
        // }
    }
}